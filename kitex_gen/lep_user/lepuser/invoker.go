// Code generated by Kitex v1.16.4. DO NOT EDIT.

package lepuser

import (
	lep_user "bupt/lep_user/kitex_gen/lep_user"
	byted "code.byted.org/kite/kitex/byted"
	server "code.byted.org/kite/kitex/server"
)

// NewInvoker creates a server.Invoker with the given handler and options.
func NewInvoker(handler lep_user.LepUser, opts ...server.Option) server.Invoker {
	var options []server.Option

	options = append(options, byted.InvokeSuite(serviceInfo()))

	options = append(options, opts...)

	s := server.NewInvoker(options...)
	if err := s.RegisterService(serviceInfo(), handler); err != nil {
		panic(err)
	}
	if err := s.Init(); err != nil {
		panic(err)
	}
	return s
}

// NewInvokerWithBytedConfig creates a server.Invoker with the given handler and options.
func NewInvokerWithBytedConfig(handler lep_user.LepUser, config *byted.ServerConfig, opts ...server.Option) server.Invoker {
	var options []server.Option
	options = append(options, byted.InvokeSuiteWithConfig(serviceInfo(), config))
	options = append(options, opts...)

	s := server.NewInvoker(options...)
	if err := s.RegisterService(serviceInfo(), handler); err != nil {
		panic(err)
	}
	if err := s.Init(); err != nil {
		panic(err)
	}
	return s
}
